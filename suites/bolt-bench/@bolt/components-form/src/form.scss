/* ------------------------------------ *\
   Forms
\* ------------------------------------ */

@import '@bolt/core/styles';




// General Form Elements
select {
  cursor: pointer;
}

.c-bolt-form,
.c-bolt-fieldset {
  @include bolt-margin-bottom(medium);

  display: block;

  &:last-child {
    @include bolt-margin-bottom(0);
  }
}

.c-bolt-fieldset {
  border: none;
}

.c-bolt-legend {
  @include bolt-margin(0 0 xsmall 0);

  display: block;
}




// Input List
.c-bolt-input-list {
  @include bolt-margin(0);
  @include bolt-padding(0);
}

.c-bolt-input-list--stack-spacing-none {
  .c-bolt-input-list__item {
    @include bolt-margin-bottom(0);
  }
}

.c-bolt-input-list--stack-spacing-xsmall {
  .c-bolt-input-list__item {
    @include bolt-margin-bottom(xsmall);
  }
}

.c-bolt-input-list__item {
  @include bolt-margin(0 0 small 0);
  @include bolt-padding(0);

  display: block;
  position: relative;

  &:last-child {
    @include bolt-margin-bottom(0);
  }
}




// Checkbox and Radio Inputs
$bolt-inline-label-transition: $bolt-transition-timing cubic-bezier(0.45,1.8,0.5,0.75);
$bolt-inline-label-input-color: bolt-color("indigo", light);
$bolt-inline-label-input-border-color: rgba(bolt-color("indigo", light), 0.25); // TODO: [Mai] This is the theme link color at 25%
$bolt-inline-label-input-border-style: $bolt-border-style;
$bolt-inline-label-input-border-width: $bolt-border-width;

// Data Inputs
$bolt-floating-label-text-scale: bolt-strip-unit($bolt-font-size--xsmall);
$bolt-floating-label-text-color: rgba(bolt-color("gray", xdark), 0.5); // TODO: [Denton] This is the theme text color at 66%
$bolt-floating-label-text-color-active: bolt-color("indigo", light); // TODO: [Mai] This is the theme link color
$bolt-floating-label-text-indent: calc(#{bolt-spacing(small)} + 2px);
$bolt-floating-label-transition: $bolt-transition;

$bolt-input-text-color: bolt-color("gray", xdark); // TODO: [Mai] This is the theme text color
$bolt-input-text-color--invalid: bolt-color(error); // TODO: [Mai] This is the theme error color
$bolt-input-text-color--disabled: rgba(bolt-color("gray", xdark), 0.5); // TODO: [Mai] This is the theme text color at 66%
$bolt-input-background-color: bolt-color("white"); // TODO: [Mai] This is the theme input background color
$bolt-input-background-color--disabled: bolt-color("gray", xlight);
$bolt-input-background-color--invalid: lighten(bolt-color(error), 58%);
$bolt-input-placeholder-color: rgba(bolt-color("gray", xdark), 0.5); // TODO: [Mai] This is the theme text color at 66%
$bolt-input-placeholder-color--invalid: bolt-color(error); // TODO: [Mai] This is the theme error color
$bolt-input-placeholder-color--disabled: rgba(bolt-color("gray", xdark), 0.5); // TODO: [Mai] This is the theme text color at 66%
$bolt-input-icon-color: bolt-color("black");
$bolt-input-icon-color--active: bolt-color("indigo", light);
$bolt-input-icon-color--invalid: bolt-color(error);
$bolt-input-border-color: rgba(bolt-color("indigo", light), 0.25); // TODO: [Mai] This is the theme link color at 25%
$bolt-input-border-color--focus: bolt-color("indigo", light); // TODO: [Mai] This is the theme link color
$bolt-input-border-color--invalid: bolt-color(error); // TODO: [Mai] This is the theme error color
$bolt-input-border-width: $bolt-border-width;
$bolt-input-border-style: $bolt-border-style;
$bolt-input-border-radius: $bolt-border-radius;
$bolt-input-box-shadow: bolt-color("indigo", light);
$bolt-input-shadow-level: 'level-20';
$bolt-input-transition: $bolt-transition;

@mixin bolt-input-placeholder($color) {
  &::-webkit-input-placeholder { /* Chrome/Opera/Safari */

    // Workaround for pega.com Drupal, which currently uses sanitize.css.  Once that's
    // removed, the following line will be unnecessary.
    opacity: bolt-opacity(100);
    color: $color;
  }

  &::-moz-placeholder { /* Firefox 19+ */
    color: $color;
  }

  &:-ms-input-placeholder { /* IE 10+ */
    color: $color;
  }

  &:-moz-placeholder { /* Firefox 18- */
    color: $color;
  }
}

.c-bolt-input {
  // This should ONLY apply to <input> elements, NOT anything else like <label>, <div>, <span>, etc.
  @include bolt-padding(medium, squished); // [Mai] This matches button vertical spacing.
  @include bolt-padding-right(small); // [Mai] This does not match the button horizontal spacing, which is what we want. We only want inputs to be as tall as buttons.
  @include bolt-padding-left(small); // [Mai] This does not match the button horizontal spacing, which is what we want. We only want inputs to be as tall as buttons.
  @include bolt-input-placeholder($bolt-input-placeholder-color);

  display: block;

  // Removing native controls
  -webkit-appearance: none !important;
  -moz-appearance: none !important;
  appearance: none !important;
  opacity: bolt-opacity(100); // [Mai] Reset mobile Safari browser default.

  // Force browsers to render this using hardward acceleration.
  // This resolves a rendering quirk seen in Chrome where the hover
  // state would only work intermittently.
  transform: translate3d(0, 0, 0);
  width: 100%;
  color: $bolt-input-text-color;
  line-height: calc(#{$bolt-line-height--xsmall + em} - 2px); // [Mai] The line-height matches button's line-height, the 2px offsets the 1px border from the input.
  text-indent: 0.01px;
  font-size: $bolt-font-size--small;
  border-radius: $bolt-input-border-radius;
  border-width: $bolt-input-border-width;
  border-style: $bolt-input-border-style;
  border-color: $bolt-input-border-color;
  outline: none;
  background-color: $bolt-input-background-color;
  transition: all $bolt-input-transition;
  text-overflow: '';

  @media (max-width: bolt-breakpoint(small)) {
    line-height: calc(#{$bolt-line-height--xsmall + em} - 6px); // [Mai] This is just magic number, if the font-size ever changes, this also needs to change by inspecting in the browser and push the px.
    font-size: 16px; // [Mai] Mobile Safari will zoom in when input is focused if the text is not at least 16px.
  }

  &::-ms-expand
  {
    display: none;
  }
  // Removing native controls

  &.is-invalid,
  &.is-touched:invalid {
    @include bolt-input-placeholder($bolt-input-placeholder-color--invalid);

    color: $bolt-input-text-color--invalid;
    border-color: $bolt-input-border-color--invalid;
    background-color: $bolt-input-background-color--invalid;
  }

  &.is-disabled,
  &:disabled {
    @include bolt-input-placeholder($bolt-input-placeholder-color--disabled);

    color: $bolt-input-text-color--disabled;
    cursor: not-allowed;
    background-color: $bolt-input-background-color--disabled;
  }

  &.is-filled,
  &:focus {
    padding-top: calc(#{bolt-v-spacing(small)} + 0.55rem);
    padding-bottom: calc(#{bolt-v-spacing(small)} - 0.55rem);
  }

  &:focus,
  &:hover {
    &:not(.is-disabled):not(:disabled) {
      @include bolt-shadow($key: $bolt-input-shadow-level, $base-color: $bolt-input-box-shadow);
    }
  }

  &:focus {
    border-color: $bolt-input-border-color--focus !important;
  }
}

.c-bolt-input--checkbox,
.c-bolt-input--radio {
  @include bolt-visuallyhidden;

  display: inline;
}

.c-bolt-floating-label {
  opacity: bolt-opacity(0);
  position: absolute;
  top: 0.9rem;
  left: $bolt-floating-label-text-indent;
  transform: translate3d(0, -50%, 0) translateY(.4rem);
  color: $bolt-floating-label-text-color;
  line-height: $bolt-floating-label-text-scale;
  pointer-events: none;
  user-select: none;
  transition: all $bolt-floating-label-transition;
  white-space: nowrap;
  transform-origin: 0 100%;
}

.c-bolt-input.is-filled,
.c-bolt-input:focus,
.c-bolt-custom-input.is-active {
  // [Mai] A custom input is considered active if the regular input inside is filled or in focus.
  & ~ .c-bolt-floating-label {
    opacity: bolt-opacity(100);
    transform: translate3d(0, -100%, 0) translateY(.1rem) scale($bolt-floating-label-text-scale);
  }
}

.c-bolt-input:focus,
.c-bolt-custom-input.is-active {
  & ~ .c-bolt-floating-label {
    color: $bolt-floating-label-text-color-active;
  }
}

.c-bolt-inline-label {
  @include bolt-padding-left(1.5em);
  @include bolt-font-size(small);

  display: inline-block;
  position: relative;
  color: bolt-theme(text);
  cursor: pointer;
  user-select: none;

  &:before,
  &:after {
    position: absolute;
    transition: all $bolt-inline-label-transition;
  }

  &:before {
    content: '';
    top: 0.2em;
    left: 0;
    width: 1em;
    height: 1em;
    border-width: $bolt-inline-label-input-border-width;
    border-style: $bolt-inline-label-input-border-style;
    border-color: $bolt-inline-label-input-border-color;
    background-color: $bolt-input-background-color;
  }

  &:after {
    content: '';
    opacity: bolt-opacity(0);
    transform-origin: center;
  }
}

.c-bolt-inline-label--checkbox {
  &:before {
    border-radius: 2px;
  }

  &:after {
    top: 0.3em;
    left: 0.375em;
    transform: rotate(45deg) scale(0.1);
    width: calc(1em - 0.675em);
    height: calc(1em - 0.325em);
    border-width: 0 2px 2px 0;
    border-style: solid;
    border-color: $bolt-inline-label-input-color;
  }
}

.c-bolt-inline-label--radio {
  &:before,
  &:after {
    border-radius: 1em;
  }

  &:after {
    top: calc(0.2em + 3px);
    left: 3px;
    transform: scale(0.1);
    width: calc(1em - 6px);
    height: calc(1em - 6px);
    background-color: $bolt-inline-label-input-color;
  }
}

.c-bolt-input--checkbox,
.c-bolt-input--radio {
  &:focus ~ .c-bolt-inline-label,
  &:hover ~ .c-bolt-inline-label {
    &:before {
      @include bolt-shadow($key: $bolt-input-shadow-level, $base-color: $bolt-input-box-shadow);
    }
  }

  &:focus ~ .c-bolt-inline-label {
    &:before {
      @include bolt-shadow($key: $bolt-input-shadow-level, $base-color: $bolt-input-box-shadow);
    }
  }

  &:checked ~ .c-bolt-inline-label {
    &:before {
      border-color: $bolt-input-border-color--focus;
    }

    &:after {
      opacity: bolt-opacity(100);
    }

    .c-bolt-inline-label__emphasize {
      @include bolt-font-weight(semibold);
    }
  }

  &:disabled ~ .c-bolt-inline-label {
    &:before {
      background-color: $bolt-input-background-color--disabled;
    }
  }
}

.c-bolt-input--checkbox {
  &:checked ~ .c-bolt-inline-label {
    &:after {
      transform: rotate(45deg) scale(1);
    }
  }
}

.c-bolt-input--radio {
  &:checked ~ .c-bolt-inline-label {
    &:after {
      transform: scale(1);
    }
  }
}

.c-bolt-input-icons {
  // Icon size and padding should NOT adjust alongside font size because the height of the input
  // is set to match the height of default buttons, which should have a fixed height.
  @include bolt-font-size(small);

  position: absolute;
  top: 1px;
  right: 1px;
  padding-top: 0.35 * bolt-v-spacing(medium);
  padding-right: bolt-spacing(small);
  padding-bottom: 0.35 * bolt-v-spacing(medium) / 2;
  padding-left: 0;
  color: $bolt-input-icon-color;
  pointer-events: none;
  border-radius: $bolt-input-border-radius;
  background-color: $bolt-input-background-color;

  &:before {
    content: '';
    position: absolute;
    top: 0;
    left: -.95rem;
    width: 1rem;
    height: 100%;
    background: linear-gradient(to left, $bolt-input-background-color, rgba(255, 255, 255, 0));
  }
}

.c-bolt-input.is-invalid,
.c-bolt-input.is-touched:invalid {
  & ~ .c-bolt-input-icons {
    background-color: $bolt-input-background-color--invalid;

    &:before {
      background: linear-gradient(to left, $bolt-input-background-color--invalid, rgba(255, 255, 255, 0));
    }
  }
}

.c-bolt-input.is-disabled,
.c-bolt-input:disabled {
  & ~ .c-bolt-input-icons {
    background-color: $bolt-input-background-color--disabled;

    &:before {
      background: linear-gradient(to left, $bolt-input-background-color--disabled, rgba(255, 255, 255, 0));
    }
  }
}

.c-bolt-input:focus,
.c-bolt-custom-input.is-active {
  & ~ .c-bolt-input-icons {
    color: $bolt-input-icon-color--active;
    @include bolt-css-vars((
      --bolt-theme-icon: $bolt-input-icon-color--active,
    ));
  }
}

.c-bolt-input-icon {
  display: inline-block;
}

.c-bolt-input-icon--link {
  @include bolt-padding(0);
  @include bolt-font-family(body);
  text-decoration: none;

  cursor: pointer;
  pointer-events: auto;
  border: none;
  background: none;
}

.c-bolt-input-icon--invalid {
  display: none; // The invalid icon will always be present and simply un-hidden when a field becomes invalid
  color: $bolt-input-icon-color--invalid;
  @include bolt-css-vars((
    --bolt-theme-icon: $bolt-input-icon-color--invalid,
  ));
}

.c-bolt-input.is-invalid ~ .c-bolt-input-icons,
.c-bolt-input.is-touched:invalid ~ .c-bolt-input-icons {
  .c-bolt-input-icon--invalid {
    display: block;
  }
}

.c-bolt-input.is-disabled ~ .c-bolt-input-icons,
.c-bolt-input:disabled ~ .c-bolt-input-icons {
  background-color: $bolt-input-background-color--disabled;

  &:before {
    background: linear-gradient(to left, $bolt-input-background-color--disabled, rgba(255, 255, 255, 0));
  }
}

.c-bolt-input-icon__text {
  @include bolt-visuallyhidden;
}




// Input validation or helper text
$bolt-input-message-text-color--invalid: bolt-color(error); // TODO: [Mai] This is the theme error color

.c-bolt-input-message {
  @include bolt-padding(xxsmall small);
  @include bolt-font-size(medium);
}

.c-bolt-input-message--invalid {
  @include bolt-font-weight(semibold);
  @include bolt-font-size(xsmall);
  color: $bolt-input-message-text-color--invalid;
}




// Strength Indicator
$bolt-strength-indicator-transition: $bolt-transition;

.c-bolt-strength-indicator {
  @include bolt-padding(small, squished);

  display: none;

  .c-bolt-input[type='password']:focus ~ & {
    display: block;
  }
}

.c-bolt-strength-indicator__meter {
  @include bolt-margin-bottom(xsmall);

  display: block;
  width: 100%;
  height: 0.25rem;
  border-radius: 0.25rem;
  transition: all $bolt-strength-indicator-transition;
}

.c-bolt-strength-indicator__meter--00 {
  background: linear-gradient(90deg, bolt-color("indigo", xlight) 0%, bolt-color("indigo", xlight) 0%);
}

.c-bolt-strength-indicator__meter--25 {
  background: linear-gradient(90deg, bolt-color(success) 22%, bolt-color(error) 28%);
}

.c-bolt-strength-indicator__meter--50 {
  background: linear-gradient(90deg, bolt-color(success) 47%, bolt-color(error) 53%);
}

.c-bolt-strength-indicator__meter--75 {
  background: linear-gradient(90deg, bolt-color(success) 72%, bolt-color(error) 78%);
}

.c-bolt-strength-indicator__meter--100 {
  background: linear-gradient(90deg, bolt-color(success) 100%, bolt-color(error) 100%);
}

.c-bolt-strength-indicator__text {
  @include bolt-font-size(xsmall);

  display: block;
}


// Toggle
.c-bolt-toggle {
  @include bolt-margin-bottom(medium);
  display: inline-flex;
  flex-wrap: nowrap;
  border-radius: $bolt-input-border-radius;
  background-color: $bolt-input-border-color;

  &:last-child {
    @include bolt-margin-bottom(0);
  }
}

.c-bolt-toggle__item {
}

.c-bolt-toggle__item-input {
  @include bolt-visuallyhidden;

  &:checked + .c-bolt-toggle__item-label {
    border-color: $bolt-input-border-color;
    background-color: bolt-color("white");
  }

  &:focus + .c-bolt-toggle__item-label {
    @include bolt-shadow($key: $bolt-input-shadow-level, $base-color: $bolt-input-box-shadow);
  }
}

.c-bolt-toggle__item-label {
  @include bolt-margin(($bolt-input-border-width * -1));
  @include bolt-padding(0.65rem 0.75rem);
  display: block;
  cursor: pointer;
  border-radius: $bolt-input-border-radius;
  border-width: $bolt-input-border-width;
  border-style: $bolt-input-border-style;
  border-color: transparent;
  transition: all $bolt-input-transition;
}
