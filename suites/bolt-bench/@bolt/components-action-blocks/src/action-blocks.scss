@import '@bolt/core/styles';
@import './action-blocks-settings-and-tools';

/* ------------------------------------ *\
   Action Blocks Container
\* ------------------------------------ */

// The Frame to Contain a Group of Action Blocks
bolt-action-blocks {
  display: block; // TODO: This needs to use the global block element mixin.
  overflow: hidden;
}

.c-bolt-action-blocks {
  @include bolt-margin(0 -1px -1px 0);
  @include bolt-padding(0);
  display: flex;
  flex-wrap: wrap;
  transform: translate3d(0, 0, 0); //Force hardware accelerated rendering to cleanly remove extra border from showing up sometimes
  list-style: none;
}

.c-bolt-action-blocks__item {
  display: block;
  flex-grow: 1;
  position: relative;
  min-width: 150px;

  &:before {
    content: '';
    display: block;
    position: absolute;
    top: 0;
    left: 0;
    z-index: bolt-z-index('background');
    width: 100%;
    height: 100%;
    border-right-color: bolt-theme(border, 0.2);
    border-right-style: $bolt-action-blocks-border-style;
    border-right-width: $bolt-action-blocks-border-width;
    border-bottom-color: bolt-theme(border, 0.2);
    border-bottom-style: $bolt-action-blocks-border-style;
    border-bottom-width: $bolt-action-blocks-border-width;
  }
}

.c-bolt-action-blocks--borderless > .c-bolt-action-blocks__item:before {
  border-right-color: transparent;
  border-bottom-color: transparent;
}

.c-bolt-action-blocks--valign-start {
  // TODO: [Mai] I know this feels dirty, but how else can it do this?
  .c-bolt-action-block {
    justify-content: flex-start;
  }
}

.c-bolt-action-blocks--valign-center {
  // TODO: [Mai] I know this feels dirty, but how else can it do this?
  .c-bolt-action-block {
    justify-content: center;
  }
}

.c-bolt-action-blocks--valign-end {
  // TODO: [Mai] I know this feels dirty, but how else can it do this?
  .c-bolt-action-block {
    justify-content: flex-end;
  }
}

@for $number from 2 through 12 {
  .c-bolt-action-blocks--item-max-#{$number} > .c-bolt-action-blocks__item {
    flex-basis: calc(100% / #{$number} - #{$bolt-action-blocks-border-width});
  }
}


.c-bolt-action-block__text {
  color: bolt-theme(headline-link);
  transition: color $bolt-action-blocks-transition-timing $bolt-action-blocks-transition-ease;

  .c-bolt-action-block:focus &,
  .c-bolt-action-block:hover &,
  .c-bolt-action-block:active & {
    color: bolt-theme(secondary);
  }
}
