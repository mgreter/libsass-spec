/* ------------------------------------ *\
   Background
\* ------------------------------------ */

@import '@bolt/core/styles';

$bolt-test-color-background-gradient--primary: bolt-color("black"); // This needs to map to the theme's background color.
$bolt-test-color-background-gradient--secondary: rgba($bolt-test-color-background-gradient--primary, 0.1);


$bolt-gradient-angle--default: -35deg;
$bolt-gradient-angle--reversed: 180deg - abs($bolt-gradient-angle--default);

$bolt-background-dark-overlay-opacity--light: 0.3;
$bolt-background-dark-overlay-opacity--medium: 0.55;
$bolt-background-dark-overlay-opacity--heavy: 0.8;

$bolt-bg-shape-offset-bottom-default: -100px;
$bolt-bg-shape-offset-side-default: $bolt-bg-shape-offset-bottom-default * 1.2;
$bolt-bg-shape-offset-bottom-small: -150px;
$bolt-bg-shape-offset-side-small: $bolt-bg-shape-offset-bottom-small * 1.2;
$bolt-bg-shape-offset-bottom-large: -300px;
$bolt-bg-shape-offset-side-large: $bolt-bg-shape-offset-bottom-large * 1.2;



// Zoom animation treatment
@keyframes a-bolt-zoom-in-out {
  0% {
    transform: scale(1.05);
  }

  50% {
    transform: scale(1.25);
  }

  100% {
    transform: scale(1.05);
  }
}


bolt-background {
  flex-grow: 1;
}

.c-bolt-background {
  position: absolute;
  top: 0;
  right: 0;
  width: 100%;
  height: 100%;
  overflow: hidden;
}


.c-bolt-background__item {
  display: block;
  display: flex;
  width: 100%;
  height: 100%;
  overflow: hidden;

  > * {
    flex-grow: 1;
  }
}

.c-bolt-background__item--blur {
  transform: scale(1.05);
  filter: blur(0.5rem);
}

.c-bolt-background__item--grayscale {
  filter: grayscale(100%);
}

.c-bolt-background__item--zoom-in-out {
  animation: a-bolt-zoom-in-out 45s ease-in-out infinite both;
}

.c-bolt-background__video {
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: bolt-z-index('backgroundTop');
  transition: opacity 0.4s ease, min-height 0.4s ease, max-height 0.4s ease;

  .is-ready & {
    pointer-events: none;
    background-color: rgba(bolt-color("indigo", dark), 0.8);
    perspective: 500px;
    perspective-origin: 50% 150%;
  }

  .is-collapsed & {
    visibility: hidden;
    opacity: bolt-opacity(0);
    pointer-events: none;
  }

  .is-expanded & {
    visibility: visible;
    opacity: bolt-opacity(100);
    pointer-events: auto;
  }

  .video-js {
    width: 100%;
    min-width: 0;
    max-width: 1400px;
    margin: 0 auto;
    transition: all 0.4s ease;

    .is-ready & {
      background-color: transparent;
    }

    // .is-collapsed & {
    //   transform: scale(0.95) rotateX(20deg) translateY(20%);
    // }

    // .is-expanded & {
    //   transform: scale(1) rotateX(0deg) translateY(0%);
    //   transition: transform 0.3s cubic-bezier(0.645, 0, 0.355, 1);
    // }
  }
}

.c-bolt-background__image {
  top: -9999px;
  right: -9999px;
  bottom: -9999px;
  left: -9999px;

  .is-expanded & {
    opacity: bolt-opacity(100);
    filter: blur(10px);
  }
}

.c-bolt-background__video,
.c-bolt-background__image {
  @include bolt-margin(auto);

  position: absolute;
  min-width: 100%;
  max-width: none; //Required to handle instances where a max-width is previously set.
  min-height: 100%;

  @supports (object-fit: cover) {
    display: block;
    width: 100%;
    height: 100%;
    object-fit: cover;
  }
}

.c-bolt-background__overlay {

  content: '';
  display: block;
  position: absolute;

  // This overlay has a history of rounding errors (which can leave a stripe on one side of the background that's not
  // covered by the overlay).  The following is a hack that all but guarantees that can't happen.
  top: -1px;
  right:  -1px;
  bottom: -1px;
  left: -1px;
}

.c-bolt-background__overlay--medium-opacity {
  opacity: $bolt-background-dark-overlay-opacity--medium; // TODO: This number is only working for dark colors, it does not work for light colors. Therefore light and xlight themes with a background image would not be accessible yet.
}

.c-bolt-background__overlay--heavy-opacity {
  opacity: $bolt-background-dark-overlay-opacity--heavy; // TODO: This number is only working for dark colors, it does not work for light colors. Therefore light and xlight themes with a background image would not be accessible yet.
}

.c-bolt-background__overlay--light-opacity {
  opacity: $bolt-background-dark-overlay-opacity--light; // TODO: This number is only working for dark colors, it does not work for light colors. Therefore light and xlight themes with a background image would not be accessible yet.
}


.c-bolt-background__overlay--color-fill {
  background-color: bolt-theme(background);
}




// TODO: The gradient option is only working for the dark and xdark themes. It needs to map to the theme colors in order for it to work for the light and xlight themes.

// Default gradient if the image focal point (point of interest) is in the center or on the right side
.c-bolt-background__overlay--gradient-fill {
  background: linear-gradient($bolt-gradient-angle--default, $bolt-test-color-background-gradient--secondary, $bolt-test-color-background-gradient--primary 50%);
  background: linear-gradient($bolt-gradient-angle--default, var(--bolt-theme-background-gradient-primary, $bolt-test-color-background-gradient--secondary), var(--bolt-theme-background-gradient-primary, $bolt-test-color-background-gradient--primary) 50%);
}

// Alt gradient used if the image focal point (point of interest) is on the left side
.c-bolt-background__overlay--gradient-reversed-fill {
  background: linear-gradient($bolt-gradient-angle--reversed, $bolt-test-color-background-gradient--secondary, $bolt-test-color-background-gradient--primary 50%);
  background: linear-gradient($bolt-gradient-angle--reversed, var(--bolt-theme-background-gradient-secondary, $bolt-test-color-background-gradient--secondary), var(--bolt-theme-background-gradient-primary, $bolt-test-color-background-gradient--primary) 50%);
}

.c-bolt-background__shapes {
  position: absolute;
  right: $bolt-bg-shape-offset-side-default;
  bottom: $bolt-bg-shape-offset-bottom-default;
  transform: rotate(-45deg);

  @include bolt-mq(small) {
    right: $bolt-bg-shape-offset-side-small;
    bottom: $bolt-bg-shape-offset-bottom-small;
  }

  @include bolt-mq(large) {
    right: $bolt-bg-shape-offset-side-large;
    bottom: $bolt-bg-shape-offset-bottom-large;
  }
}

.c-bolt-background__shapes--left {
  right: auto;
  left: $bolt-bg-shape-offset-side-default;
  transform: rotate(45deg);

  @include bolt-mq(small) {
    left: $bolt-bg-shape-offset-side-small;
  }

  @include bolt-mq(large) {
    left: $bolt-bg-shape-offset-side-large;
  }
}
