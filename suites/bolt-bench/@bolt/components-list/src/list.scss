/* ------------------------------------ *\
   List
\* ------------------------------------ */

@import 'libsass-spec/suites/bolt-bench/@bolt/core/styles';

@include bolt-custom-element('bolt-list', block, medium);

.c-bolt-list {
  @include bolt-margin(0);
  @include bolt-padding(0);

  list-style: none;
}

// Display Prop
.c-bolt-list--display-block {
  display: flex;
  flex-flow: column wrap;
}

.c-bolt-list--display-inline {
  display: inline-flex;
  flex-flow: row wrap;
}

.c-bolt-list--display-flex {
  display: flex;
  flex-flow: row wrap;

  ::slotted(bolt-list-item),
  bolt-list-item {
    flex: 1 0 auto;
  }
}

@each $breakpoint in $bolt-breakpoints {
  $breakpoint-name: nth($breakpoint, 1);

  .c-bolt-list--display-inline\@#{$breakpoint-name} {
    display: flex;
    flex-flow: column wrap;

    @include bolt-mq($breakpoint-name) {
      display: inline-flex;
      flex-flow: row wrap;
    }
  }
}


// Spacing Prop
@each $spacing-value in $bolt-spacing-values {
  $spacing-value-name: nth($spacing-value, 1);

  .c-bolt-list--spacing-#{$spacing-value-name}:not(.c-bolt-list--inset) {
    margin-bottom: bolt-v-spacing(#{$spacing-value-name}) * -1;
    margin-left: bolt-spacing(#{$spacing-value-name}) * -1;

    &.c-bolt-list--display-inline {
      width: calc(100% + #{bolt-spacing($spacing-value-name)} + 1px); // The inline here is talking about the items inside, the List component itself is still a block level element that would fill up the space of any container.
    }
  }

  .c-bolt-list--spacing-#{$spacing-value-name}.c-bolt-list--inset {
    @include bolt-margin-bottom(0);
    @include bolt-margin-left(0);
  }
}

// Separator Prop
$bolt-list-separator-styles: solid, dashed;

@each $separator-style in $bolt-list-separator-styles {
  .c-bolt-list--separator-#{$separator-style} {
    border: {
      width: 0;
      color: rgba(bolt-color("gray"), 0.25);
      style: #{$separator-style};
    }
  }
}

[class*='c-bolt-list--separator'] {
  &.c-bolt-list--display-flex {
    overflow: hidden;
  }
}

// Align and Valign Props
$bolt-list-alignments: start, center, end;

@each $alignment in $bolt-list-alignments {
  .c-bolt-list--align-#{$alignment} {
    &.c-bolt-list--display-inline {
      @if $alignment != 'center' {
        justify-content: flex-#{$alignment};
      }
      @else {
        justify-content: #{$alignment};
      }
    }

    @each $breakpoint in $bolt-breakpoints {
      $breakpoint-name: nth($breakpoint, 1);

      &.c-bolt-list--display-inline\@#{$breakpoint-name} {
        @include bolt-mq($breakpoint-name) {
          @if $alignment != 'center' {
            justify-content: flex-#{$alignment};
          }
          @else {
            justify-content: #{$alignment};
          }
        }
      }
    }
  }

  .c-bolt-list--valign-#{$alignment} {
    &.c-bolt-list--display-inline,
    &.c-bolt-list--display-flex {
      @if $alignment != 'center' {
        align-items: flex-#{$alignment};
      }
      @else {
        align-items: #{$alignment};
      }
    }

    @each $breakpoint in $bolt-breakpoints {
      $breakpoint-name: nth($breakpoint, 1);

      &.c-bolt-list--display-inline\@#{$breakpoint-name} {
        @include bolt-mq($breakpoint-name) {
          @if $alignment != 'center' {
            align-items: flex-#{$alignment};
          }
          @else {
            align-items: #{$alignment};
          }
        }
      }
    }
  }
}
